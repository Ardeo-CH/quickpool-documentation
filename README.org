* Generelles
Die Schnittstelle von QuickPool (QP) basiert fast komplett auf REST mit einer kleinen Ausnahme, welche GraphQL verwendet.
Zur Kommunikation mit dem Server muss stets ein Token (JWT) mitgeschickt werden, welche den Benutzer eindeutig identifiziert.
Es bestehen keine App-Tokens, der Login muss mit den Credentials von existierenden und freigeschalteten Benutzern passieren.
Wie bei JWT üblich, wird ebenfalls einmalig ein Reset-Token mitgeliefert, welches nach Ablauf der Gültigkeit des Tokens verwendet wird um ein neues Tokenpaar zu erhalten.

** CRUD
Fast alle Models haben zumindest die folgenden REST Endpunkte:
| Methode | Pfad         | Beschreibung                                                                                                                                                                                  |
|---------+--------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| GET     | /<model>     | Gibt einen Index zurück, welcher gefiltert, sortiert, eingegrenzt und paginated ist                                                                                                           |
| GET     | /<model>/:id | Gibt genau einen Eintrag zurück, sofern man berechtigt ist                                                                                                                                    |
| POST    | /<model>     | Erstellt einen neuen Eintrag, sofern die Parameter korrekt sind und gibt den kompletten Datensatz zurück                                                                                      |
| PUT     | /<model>/:id | Führt einen Update auf den Eintrag durch, sofern dieser existiert. Nur Felder, welche übergeben wurden, werden geändert. Gibt den kompletten, aktualisierten Datensatz zurück                 |
| DELETE  | /<model>/:id | Führt einen Softdelete (inactive -> true) aus, sofern der Datensatz existiert. Mehrere Deletes auf dem gleichen Datensatz haben keinen negativen Effekt. Gibt den kompletten Datensatz zurück |

Wie oben erwähnt wird die Sichtbarkeit durch das Token ermittelt und auch parameterlose Aufrufe auf den Index werden Informationen zurückgeben.

** Queries
Jede Index Abfrage kann mit einem optionalen Query-Parameter =q= versehen werden, welche es erlaubt auf fast allen Feldern zu filtern.
Hier ein Beispiel wie man Shifts filtern kann:
#+begin_src json
{
  "clients": { "id": [1] },
  "status": ["unassigned", "assigned"],
  "tags": { "id": [319] },
  "people": { "id": [5] },
  "inactive": false
}
#+end_src

Zusätzlich können folgende Query Parameter mitgegeben werden
| Parameter | Beispiel               | Funktion                                                                |
|-----------+------------------------+-------------------------------------------------------------------------|
| sort      | ={"start_date":"asc"}= | Gibt an, nach welcher Spalte sortiert werden soll                       |
| limit     | =10=                   | Gibt an, wie viele Einträge pro Seite angezeigt werden sollen           |
| page      | =1=                    | Gibt an, welche Seite geladen wird, wobei das Limit berücksichtigt wird |

** Filtern nach Zeiträumen
Bei Schichten und Verfügbarkeiten kann zusätzlich zu den anderen Queries noch ein Zeitraum angegeben werden, welcher ebenfalls berücksichtigt wird. Zu beachten ist, dass die Zeiten in UTC übergeben werden.
| Parameter | Beispiel                 |
|-----------+--------------------------|
| from      | 2022-10-16T22:00:00.000Z |
| until     | 2022-10-23T21:59:59.999Z |

Das Matching funktioniert so, dass alle Einträge geliefert werden, welche auch nur teilweise vom Zeitraum überlappt werden.
Das Startdatum muss ausserdem vor dem Enddatum liegen.
* Login
Wie oben erwähnt funktioniert das Login mit Username und Passwort. Daraufhin werden die wichtigen Informationen, wie Tokenpaar und genauere Angaben zur Person zurückgeschickt.
#+begin_src bash
curl -XPOST 'https://api.quickpool.ch/api/v1/auth/login' \
--header 'Content-Type: application/x-www-form-urlencoded' \
--data-urlencode 'email=<your@email.com>' \
--data-urlencode 'password=<yourPW>'
#+end_src

Das Resultat wird in etwa so aussehen:

#+begin_src json
{
	"id": 1,
	"email": "<your@email.com",
	"role": "admin",
	"avatar": "",
	"first_name": "Alex",
	"last_name": "Mihov",
	"client_name": null,
	"color": "#FF0000",
	"token": "eyJhbGciOiJIUzI1NiJ9.asdas......",
	"refresh_token": "eyJhbGciOiJIUzI1NiJ9.e234....",
	"account": {
		"id": 1,
		"name": "Quickshift",
		"logo": "https://api.quickpool.ch/api/v1/s3/show/quickshift/public/logos/c040c358-c838-4443-ae40-a6fcd9b44c0b-Ardeo-Logo-Symbol.png",
		"email": "info@ardeo.ch",
		"contact_name": "Ardeo GmbH",
		"phone": "079 612 02 84",
		"channel": "aaaaaaaa-bbbb-bbbb-cccc-f7550b7a1105"
	},
	"person_id": 1,
	"client_id": null,
	"config": {
		"i18n": {
			"de": {
				"app": {},
				"web": {},
				"general": "{}"
			},
			"en": {
				"app": {},
				"web": {},
				"general": {}
			}
		},
		"features": {
			"tags": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"navigation": "visible",
					"navigation_index": 7
				}
			},
			"user": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"navigation": "visible",
					"navigation_index": 0
				}
			},
			"groups": {
				"app": {},
				"web": {},
				"general": {
					"enabled": false,
					"navigation": "hidden",
					"navigation_index": 8
				}
			},
			"people": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"navigation": "visible",
					"navigation_index": 4
				}
			},
			"shifts": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"navigation": "visible",
					"navigation_index": 2
				}
			},
			"account": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"navigation": "visible",
					"navigation_index": 10
				}
			},
			"clients": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"navigation": "visible",
					"navigation_index": 5
				}
			},
			"reports": {
				"app": {},
				"web": {},
				"general": {
					"enabled": false,
					"navigation": "hidden",
					"navigation_index": 2
				}
			},
			"projects": {
				"app": {},
				"web": {},
				"general": {
					"enabled": false,
					"navigation": "hidden",
					"navigation_index": 6
				}
			},
			"skribble": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"navigation": "hidden",
					"navigation_index": 0
				}
			},
			"dashboard": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"first_view": true,
					"navigation": "visible",
					"navigation_index": 1
				}
			},
			"documents": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"navigation": "visible",
					"navigation_index": 9
				}
			},
			"templates": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"navigation": "visible",
					"navigation_index": 3
				}
			},
			"availabilities": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"navigation": "visible",
					"navigation_index": 6
				}
			},
			"export_outlook": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"navigation": "hidden",
					"navigation_index": 20
				}
			},
			"import_outlook": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"navigation": "hidden",
					"navigation_index": 20
				}
			},
			"weekly-templates": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"navigation": "visible",
					"navigation_index": 3
				}
			},
			"digital_signature": {
				"app": {},
				"web": {},
				"general": {
					"enabled": true,
					"navigation": "hidden",
					"navigation_index": 20
				}
			},
			"automatic_assignment": {
				"app": {},
				"web": {},
				"general": {
					"config": {
						"max_computation_seconds": 120
					},
					"enabled": true,
					"navigation": "hidden",
					"navigation_index": 20
				}
			}
		},
		"public_config": {
			"default_language": "de",
			"availability_mode": "presence",
			"worktime_signature": "optional",
			"automatically_confirm_shifts": false
		}
	}
}

#+end_src

* People
Eine Person beinhaltet die wichtigen Infos von Personen, welche in QP verwendet werden. Die E-Mail-Adresse der Person ist meistens dieselbe wie diejenige des Users, welcher stets der Person angeknüpft ist,
das ist allerdings nicht ein muss.
Personen werden erstellt, damit man die Mitarbeiter der Firma darstellen kann. Dabei wird für jeden Mitarbeiter, egal ob Administrator oder nicht, ein neuer Eintrag erstellt.

Den Personen kann folgendes angehängt werden:

| Model       | Beschreibung                                                                                                                                                            |
|-------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
| Tag         | Tags werden verwendet um Qualifikationen und ähnliches anzuhängen. Diese werden danach ebenfalls an Kunden und Schichten angehängt damit das Matching stattfinden kann. |
| Client      | Clients stellen die Kunden oder generell die Arbeitsbereiche dar, an denen Schichten zugeteilt werden können. Diese werden ebenfalls für das Matching verwendet         |
| Budget      | Budgets stellen die Arbeitszeit pro Monat/Woche/Tag welche der Person zugeteilt werden soll dar                                                                         |
| Fileuploads | Es können mehrere Files einer Person angehängt werden, welche einerseits von QP verwendet werden (Anzeigebild, Vertrag etc.) oder nur zur Datenablage dienen            |

#  LocalWords:  model id
